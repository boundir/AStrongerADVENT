[XComGame.XGAIPlayer]
; LastResortTargetEffects: Targets that have any of these effects will not be considered as valid targets
; unless no other targets are available.
;				Checked in BT under conditions: IsLastResortTarget, HasNonLastResortEnemies, IsTargetValidBasedOnLastResortEffects
;				Also used in destination searches for AI units, to ignore visibility checks against panicked and bound units 
;				when other targets are available.
+LastResortTargetEffects=(EffectName="IcarusDropGrabbeeEffect_Sustained")

[XComGame.X2AIBTBehaviorTree]

-EquivalentAbilities=( KeyName=Shadowbind, EquivalentAbilityName[0]=ShadowbindM2)
+EquivalentAbilities=( KeyName=Shadowbind, EquivalentAbilityName[0]=ShadowbindM2, EquivalentAbilityName[1]=ShadowbindM4)

; Codex Prime
+Behaviors=(BehaviorName=SelectAbility-TriggerSuperpositionPrime, NodeType=Action)
-Behaviors=(BehaviorName=TryCloneM4, NodeType=Sequence, Child[0]=AnyLivingEnemyVisible, Child[1]=SelectAbility-TriggerSuperposition)
+Behaviors=(BehaviorName=TryCloneM4, NodeType=Sequence, Child[0]=AnyLivingEnemyVisible, Child[1]=SelectAbility-TriggerSuperpositionPrime)

; Spectre
-Behaviors=(BehaviorName=VisibleSpectre_ABA_Branch, NodeType=Sequence, Child[0]=NotAffectedByVanish, Child[1]=Spectre_ABA_VisibleSelector)
+Behaviors=(BehaviorName=VisibleSpectre_ABA_Branch, NodeType=Sequence, Child[0]=NotAffectedByVanish, Child[1]=Spectre_ASA_VisibleSelector)

+Behaviors=(BehaviorName=Spectre_ASA_VisibleSelector, NodeType=Selector, \\
			Child[0]=TryShadowbindIfNotActive, \\
			Child[1]=VanishPostShadowbind, \\
			Child[2]=TryMoveThenHorror, \\
			Child[3]=DoIfFlankedMove, \\
			Child[4]=TryShootOrReloadOrOverwatch, \\
			Child[5]=HuntEnemyWithCover)

; Spectre Prime
-Behaviors=(BehaviorName=SpectreReaction, NodeType=Selector,      Child[0]=DoIfFlankedVanish,      Child[1]=DoIfFlankedMove, Child[2]=SkipOnResistanceTurn,      Child[3]=SpectreRandomReaction,      Child[4]=ShootWhenFlanking,       Child[5]=PrimeMoveOrShoot,      Child[6]=HuntEnemy  )
+Behaviors=(BehaviorName=SpectreReaction, NodeType=Selector, \\
			Child[0]=SkipOnResistanceTurn, \\
			Child[1]=TryShadowbindIfNotActive, \\
			Child[2]=VanishPostShadowbind, \\
			Child[3]=DoIfFlankedVanish, \\
			Child[4]=DoIfFlankedMove, \\
			Child[5]=TryHorror, \\
			Child[6]=ShootWhenFlanking, \\
			Child[7]=PrimeMoveOrShoot, \\
			Child[8]=HuntEnemy)

; ShadowbindUnit
+Behaviors=(BehaviorName=ShadowReaction, NodeType=Selector, \\
			Child[0]=MimicBeaconBehavior, \\
			Child[1]=GenericAbilityRoot, \\
			Child[2]=TryMoveThenGrenade, \\
			Child[3]=DoIfFlankedMove, \\
			Child[4]=SnipeIfAvailable, \\
			Child[5]=ShootIfIdeal, \\
			Child[6]=NeedsReload, \\
			Child[7]=MoveTowardsNearestEnemy, \\
			Child[8]=TryShootOrReloadOrOverwatch, \\
			Child[9]=TryOverwatch, \\
			Child[10]=HuntEnemyWithCover, \\
			Child[11]=HuntEnemy)

; Archon
-Behaviors=(BehaviorName=Archon_ABA_RedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=Archon_ABA_FirstActionSelector)
+Behaviors=(BehaviorName=Archon_ABA_RedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=Archon_ASA_FirstActionSelector)

+Behaviors=(BehaviorName=Archon_ASA_FirstActionSelector, NodeType=Selector, \\
			Child[0]=ContinueIcarusDropInProgress, \\
			Child[1]=TryFrenziedMoveAndAttack, \\
			Child[2]=TryMoveThenBlazingPinions, \\
			Child[3]=ArchonPrimeSpecialAbility, \\
			Child[4]=TryStandardMelee, \\
			Child[5]=DoIfFlankedMove, \\
			Child[6]=SelectMoveStandard, \\
			Child[7]=TryShootOrReloadOrOverwatch_ABA, \\
			Child[8]=HuntEnemyWithCover)

; Archon Prime
-Behaviors=(BehaviorName=ArchonReaction, NodeType=Selector, Child[0]=SkipOnResistanceTurn,     Child[1]=MimicBeaconBehavior,     Child[2]=PrimeMoveOrShootNoCover,      Child[3]=HuntEnemy)
+Behaviors=(BehaviorName=ArchonReaction, NodeType=Selector, \\
			Child[0]=SkipOnResistanceTurn, \\
			Child[1]=ContinueIcarusDropInProgress, \\
			Child[2]=MimicBeaconBehavior, \\
			Child[3]=ArchonPrimeSpecialAbility, \\
			Child[4]=ArchonPriorityMovement, \\
			Child[5]=PrimeMoveOrShootNoCover, \\
			Child[6]=HuntEnemy)

+Behaviors=(BehaviorName=ArchonPrimeSpecialAbility, NodeType=Sequence, \\
			Child[0]=IsAbilityAvailable-IcarusDropGrab, \\
			Child[1]=MultipleValidTargetsRemain, \\
			Child[2]=SelectTargetForIcarusDrop, \\
			Child[3]=SelectAbility-IcarusDropGrab)

; Holy Warrior
+Behaviors=(BehaviorName=DidntJustMindControl, NodeType=Inverter, Child[0]=WasLastAbility-MindControl)
+Behaviors=(BehaviorName=WasLastAbility-MindControl, NodeType=Condition)

-Behaviors=(BehaviorName=ScoreTargetForHolyWarriorOnMC, NodeType=Sequence, Child[0]=TargetAffectedByEffect-MindControl, Child[1]=GenericTargetEvaluations)
+Behaviors=(BehaviorName=ScoreTargetForHolyWarriorOnMC, NodeType=Sequence, Child[0]=TargetAffectedByEffect-MindControl, Child[1]=DidntJustMindControl, Child[2]=HolyWarriorMCTargetEvaluations)

+Behaviors=(BehaviorName=HolyWarriorMCTargetEvaluations, NodeType=Sequence, Child[0]=TargetScoreHitChance, Child[1]=TargetScoreHealth, Child[2]=TargetScoreFlanking, Child[3]=TargetScoreMarked, Child[4]=TargetScoreCivilian)

; Muton Execute
;+Behaviors=(BehaviorName=TryMutonExecute, NodeType=Sequence, Child[0]=IsAbilityAvailable-DelayedExecute, Child[1]=SelectExecuteTarget, Child[2]=SelectAbility-DelayedExecute)
;+Behaviors=(BehaviorName=CannotExecute, NodeType=Inverter, Child[0]=IsAbilityAvailable-DelayedExecute)
;+Behaviors=(BehaviorName=SelectExecuteTarget, NodeType=Sequence, Child[0]=SetTargetStack-DelayedExecute, Child[1]=SelectClosestStunnedEnemyTarget_NonCivilianOrVIP, Child[2]=HasValidTarget-DelayedExecute)

;+Behaviors=(BehaviorName=SelectClosestStunnedEnemyTarget_NonCivilianOrVIP, NodeType=RepeatUntilFail, Child[0]=EvaluateClosestStunnedEnemyTarget_NonCivilianOrVIP)
;+Behaviors=(BehaviorName=EvaluateClosestStunnedEnemyTarget_NonCivilianOrVIP, NodeType=Sequence, Child[0]=SetNextTarget, Child[1]=SSScoreClosestStunnedEnemyTarget_NonCivilianOrVIP, Child[2]=UpdateBestTarget)
;+Behaviors=(BehaviorName=SSScoreClosestStunnedEnemyTarget_NonCivilianOrVIP, NodeType=Successor, Child[0]=ScoreClosestStunnedEnemyTarget_NonCivilianOrVIP)
;+Behaviors=(BehaviorName=ScoreClosestStunnedEnemyTarget_NonCivilianOrVIP, NodeType=Sequence, Child[0]=TargetIsEnemy, Child[1]=TargetIsNotCivilian, Child[2]=TargetIsNotEnemyVIP, Child[3]=TargetNotTeamResistance, Child[4]=TargetAffectedByEffect-Stunned, Child[5]=TargetScoreByScaledDistance-1, Child[6]=AddToTargetScore_200)
;+Behaviors=(BehaviorName=TargetAffectedByEffect-Stunned, NodeType=Condition)