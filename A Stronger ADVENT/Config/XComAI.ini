; This file will cover general AI.
; You will find specific AI units to their respective subfolders.

[XComGame.XGAIPlayer]
; LastResortTargetEffects: Targets that have any of these effects will not be considered as valid targets
; unless no other targets are available.
;				Checked in BT under conditions: IsLastResortTarget, HasNonLastResortEnemies, IsTargetValidBasedOnLastResortEffects
;				Also used in destination searches for AI units, to ignore visibility checks against panicked and bound units 
;				when other targets are available.
+LastResortTargetEffects=(EffectName="IcarusDropGrabbeeEffect_Sustained")

[XComGame.X2AIBTBehaviorTree]

+EquivalentAbilities=( KeyName=Shadowbind, EquivalentAbilityName[0]=ShadowbindM4 )
+EquivalentAbilities=( KeyName=WarCry, EquivalentAbilityName[0]=WarCry_ASA )

; If using Everyone Gets Hunker Down mod, will try to extinguish fire by hunkering down
+Behaviors=(BehaviorName=TryExtinguishFire, NodeType=Sequence, Child[0]=AffectedByEffect-Burning, Child[1]=TryCower)

; Conditions
+Behaviors=(BehaviorName=TargetIsNotFlanked, NodeType=Inverter, Child[0]=IsFlankingTarget)

; Hit Chance based Conditions
+Behaviors=(BehaviorName=AllHitChancesBelow35, NodeType=StatCondition, Param[0]=TopHitChance, Param[1]="<", Param[2]="35")
+Behaviors=(BehaviorName=NOTAllHitChancesBelow35, NodeType=Inverter, Child[0]=AllHitChancesBelow35)
+Behaviors=(BehaviorName=AllHitChancesBelow40, NodeType=StatCondition, Param[0]=TopHitChance, Param[1]="<", Param[2]="40")
+Behaviors=(BehaviorName=NOTAllHitChancesBelow40, NodeType=Inverter, Child[0]=AllHitChancesBelow40)

; Overwatching, even with a weak CTH, brings more pressure than hunkering down

; A Better ADVENT Behaviors
; CTH<10
-Behaviors=(BehaviorName=RandOverwatchAtCTH10First, NodeType=RandFilter, Child[0]=TryOverwatch10MaybeHunker90, Param[0]=90)
-Behaviors=(BehaviorName=RandOverwatchAtCTH10Second, NodeType=RandFilter, Child[0]=TryOverwatch10MaybeHunker90, Param[0]=75)
; CTH<25
-Behaviors=(BehaviorName=RandOverwatchAtCTH25First, NodeType=RandFilter, Child[0]=TryOverwatch30MaybeHunker70, Param[0]=60)
-Behaviors=(BehaviorName=RandOverwatchAtCTH25Second, NodeType=RandFilter, Child[0]=TryOverwatch30MaybeHunker70, Param[0]=50)
-Behaviors=(BehaviorName=RandOverwatchAtCTH25Third, NodeType=RandFilter, Child[0]=TryOverwatch30MaybeHunker70, Param[0]=30)
; CTH<50
-Behaviors=(BehaviorName=RandOverwatchAtCTH50First, NodeType=RandFilter, Child[0]=TryOverwatch65MaybeHunker35, Param[0]=15)
-Behaviors=(BehaviorName=RandOverwatchAtCTH50Second, NodeType=RandFilter, Child[0]=TryOverwatch65MaybeHunker35, Param[0]=10)
-Behaviors=(BehaviorName=RandOverwatchAtCTH50Third, NodeType=RandFilter, Child[0]=TryOverwatch65MaybeHunker35, Param[0]=3)
; CTH<75
-Behaviors=(BehaviorName=RandOverwatchAtCTH75First, NodeType=RandFilter, Child[0]=TryOverwatch90MaybeHunker10, Param[0]=1)
-Behaviors=(BehaviorName=RandOverwatchAtCTH75Second, NodeType=RandFilter, Child[0]=TryOverwatch90MaybeHunker10, Param[0]=1)

; MOCX Behaviors
; CTH<25
-Behaviors=(BehaviorName=RandOverwatchAtCTH25First, NodeType=RandFilter, Child[0]=TryOverwatch30MaybeHunker70, Param[0]=75)
-Behaviors=(BehaviorName=RandOverwatchAtCTH25Second, NodeType=RandFilter, Child[0]=TryOverwatch30MaybeHunker70, Param[0]=60)
-Behaviors=(BehaviorName=RandOverwatchAtCTH25Third, NodeType=RandFilter, Child[0]=TryOverwatch30MaybeHunker70, Param[0]=40)
; CTH<50
-Behaviors=(BehaviorName=RandOverwatchAtCTH50First, NodeType=RandFilter, Child[0]=TryOverwatch65MaybeHunker35, Param[0]=25)
-Behaviors=(BehaviorName=RandOverwatchAtCTH50Second, NodeType=RandFilter, Child[0]=TryOverwatch65MaybeHunker35, Param[0]=15)
-Behaviors=(BehaviorName=RandOverwatchAtCTH50Third, NodeType=RandFilter, Child[0]=TryOverwatch65MaybeHunker35, Param[0]=5)
; CTH<75
-Behaviors=(BehaviorName=RandOverwatchAtCTH75First, NodeType=RandFilter, Child[0]=TryOverwatch90MaybeHunker10, Param[0]=5)
-Behaviors=(BehaviorName=RandOverwatchAtCTH75Second, NodeType=RandFilter, Child[0]=TryOverwatch90MaybeHunker10, Param[0]=3)

; A Stronger ADVENT Behaviors
; CTH<10
+Behaviors=(BehaviorName=RandOverwatchAtCTH10First, NodeType=RandFilter, Child[0]=TryOverwatch80MaybeHunker20, Param[0]=50)
+Behaviors=(BehaviorName=RandOverwatchAtCTH10Second, NodeType=RandFilter, Child[0]=TryOverwatch80MaybeHunker20, Param[0]=20)
; CTH<25
+Behaviors=(BehaviorName=RandOverwatchAtCTH25First, NodeType=RandFilter, Child[0]=TryOverwatch90MaybeHunker10, Param[0]=60)
+Behaviors=(BehaviorName=RandOverwatchAtCTH25Second, NodeType=RandFilter, Child[0]=TryOverwatch90MaybeHunker10, Param[0]=50)
+Behaviors=(BehaviorName=RandOverwatchAtCTH25Third, NodeType=RandFilter, Child[0]=TryOverwatch30MaybeHunker70, Param[0]=40)
; CTH<50
+Behaviors=(BehaviorName=RandOverwatchAtCTH50First, NodeType=RandFilter, Child[0]=TryOverwatch90MaybeHunker10, Param[0]=25)
+Behaviors=(BehaviorName=RandOverwatchAtCTH50Second, NodeType=RandFilter, Child[0]=TryOverwatch90MaybeHunker10, Param[0]=10)
+Behaviors=(BehaviorName=RandOverwatchAtCTH50Third, NodeType=RandFilter, Child[0]=TryOverwatch90MaybeHunker10, Param[0]=3)
; CTH<75
+Behaviors=(BehaviorName=RandOverwatchAtCTH75First, NodeType=RandFilter, Child[0]=TryOverwatch90MaybeHunker10, Param[0]=5)
+Behaviors=(BehaviorName=RandOverwatchAtCTH75Second, NodeType=RandFilter, Child[0]=TryOverwatch90MaybeHunker10, Param[0]=3)

; Attempt to make units use their grenades more often, in better situation.
+Behaviors=(BehaviorName=TryGrenadeMany, NodeType=Sequence, Child[0]=IsAbilityAvailable-ThrowGrenade, Child[1]=FindPotentialAoETargets-GrenadeProfile, Child[2]=SelectAoETarget-GrenadeProfile, Child[3]=SelectAbility-ThrowGrenade)
; Change TryGrenade behavior to be more aggressive
-Behaviors=(BehaviorName=TryGrenade, NodeType=Sequence, Child[0]=IsAbilityAvailable-ThrowGrenade, Child[1]=FindPotentialAoETargets-GrenadeProfile, Child[2]=SelectAoETarget-GrenadeProfile, Child[3]=SelectAbility-ThrowGrenade)
+Behaviors=(BehaviorName=TryGrenade, NodeType=Selector, Child[0]=TryGrenadeMany, Child[1]=TryGrenadeOnBadShot)

; Will tend to throw grenade if hit chance is below 50%
; +Behaviors=(BehaviorName=TryGrenadeOnBadShot, NodeType=Sequence, Child[0]=AllHitChancesBelow50, Child[1]=IsAbilityAvailable-ThrowGrenade, Child[2]=FindPotentialAoETargets-GrenadeSingleProfile, Child[3]=SelectAoETarget-GrenadeSingleProfile, Child[4]=SelectAbility-ThrowGrenade)
; Will tend to throw grenade if hit chance is below 40%
+Behaviors=(BehaviorName=TryGrenadeOnBadShot, NodeType=Sequence, Child[0]=AllHitChancesBelow40, Child[1]=IsAbilityAvailable-ThrowGrenade, Child[2]=FindPotentialAoETargets-GrenadeSingleProfile, Child[3]=SelectAoETarget-GrenadeSingleProfile, Child[4]=SelectAbility-ThrowGrenade)
; Will tend to throw grenade if hit chance is below 35%
; +Behaviors=(BehaviorName=TryGrenadeOnBadShot, NodeType=Sequence, Child[0]=AllHitChancesBelow35, Child[1]=IsAbilityAvailable-ThrowGrenade, Child[2]=FindPotentialAoETargets-GrenadeSingleProfile, Child[3]=SelectAoETarget-GrenadeSingleProfile, Child[4]=SelectAbility-ThrowGrenade)

; Modified Shooting Panicked behavior. Instead of always going for Aliens if XCOM or Teammate if Alien. Randomized with a greater chance of attacking enemies.
-Behaviors=(BehaviorName=ShootRandomEnemyForPanic, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardShot, Child[1]=SelectRandomEnemyForPanic, Child[2]=SelectAbility-StandardShot)
+Behaviors=(BehaviorName=ShootRandomEnemyForPanic, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardShot, Child[1]=SelectRandomUnitForPanic, Child[2]=SelectAbility-StandardShot)
+Behaviors=(BehaviorName=SelectRandomUnitForPanic, NodeType=RandSelector, Child[0]=SelectEnemyTargetRandomly, Param[0]=5, Child[1]=SelectTeammateTargetRandomly, Param[2]=2)


; Cleanup redscreens MOCX and ABA/ABC sometimes have the same behavior names
; IsInvalidTonguePullTarget
; TryMoveIntoFlank
; UseSkillsWSOM
; TryExplosive_prio
; OverwatchOverrideNVE
; TakePriorityShots
; AllHitChancesOverDemoThreshold
; AllHitChancesBelowDemoThreshold
; TryAidProtocol
-Behaviors=(BehaviorName=IsInvalidTonguePullTarget, NodeType=Selector, Child[0]=TargetAffectedByEffect-Suppression, Child[1]=TargetIsApplyingEffect-Suppression)
-Behaviors=(BehaviorName=TryMoveIntoFlank, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=ResetDestinationSearch, Child[2]=RestrictToFlanking, Child[3]=FindDestinationWithLoS-Flanking, Child[4]=SelectAbility-StandardMove)
-Behaviors=(BehaviorName=UseSkillsWSOM, NodeType=Selector, Child[0]=TryExplosive_JustHitSomething)
-Behaviors=(BehaviorName=TryExplosive_prio, NodeType=Selector, Child[0]=TryRocketLauncher_prio, Child[1]=TryGrenadeLauncher_prio) 
-Behaviors=(BehaviorName=OverwatchOverrideNVE, NodeType=Sequence, Child[0]=NoVisibleEnemies, Child[1]=RandOverwatch75)
-Behaviors=(BehaviorName=TakePriorityShots, NodeType=Selector, Child[0]=ShootWhenFlanking, Child[1]=ShootWhenKillShot, Child[2]=ShootWhenSureShot)
-Behaviors=(BehaviorName=AllHitChancesOverDemoThreshold, NodeType=StatCondition, Param[0]=TopHitChance, Param[1]=">", Param[2]="5")
-Behaviors=(BehaviorName=AllHitChancesBelowDemoThreshold, NodeType=StatCondition, Param[0]=TopHitChance, Param[1]="<", Param[2]="65")
-Behaviors=(BehaviorName=TryAidProtocol, NodeType=Sequence, Child[0]=IsAbilityAvailable-AidProtocol, Child[1]=SelectTargetForAidProtocol, Child[2]=SelectAbility-AidProtocol)

; ScoreKillShotEnemy_ABA : ABA-MOCX-ABC - Keep ABC behavior
; If it doesn't exist create it. To avoid redscreen remove and create
-Behaviors=(BehaviorName=ScoreKillShotEnemy_ABA, NodeType=Sequence, Child[0]=TargetIsKillable, Child[1]=TargetIsEnemy, Child[2]=TargetHitChanceNotLow, Child[3]=TargetNotBound, Child[4]=TargetNotSacrificeProtected, Child[5]=GenericTargetEvaluations)
-Behaviors=(BehaviorName=ScoreKillShotEnemy_ABA, NodeType=Sequence, Child[0]=TargetIsKillable, Child[1]=TargetNotTeamTheLost, Child[2]=TargetIsEnemy, Child[3]=TargetHitChanceNotLow, Child[4]=TargetNotBound, Child[5]=TargetNotSacrificeProtected, Child[6]=GenericTargetEvaluations)
-Behaviors=(BehaviorName=ScoreKillShotEnemy_ABA, NodeType=Sequence, Child[0]=TargetIsKillable, Child[1]=TargetIsNotCivilian, Child[2]=TargetIsEnemy, Child[3]=TargetHitChanceNotLow, Child[4]=TargetNotBoundorPanicked, Child[5]=GenericTargetEvaluations)
+Behaviors=(BehaviorName=ScoreKillShotEnemy_ABA, NodeType=Sequence, Child[0]=TargetIsKillable, Child[1]=TargetIsNotCivilian, Child[2]=TargetIsEnemy, Child[3]=TargetHitChanceNotLow, Child[4]=TargetNotBoundorPanicked, Child[5]=GenericTargetEvaluations)

; ScoreSureShotEnemy_ABA : ABA-MOCX-ABC - Keep ABC behavior
; If it doesn't exist create it. To avoid redscreen remove and create
-Behaviors=(BehaviorName=ScoreSureShotEnemy_ABA, NodeType=Sequence, Child[0]=TargetHitChanceHigh, Child[1]=TargetIsEnemy, Child[2]=TargetNotBound, Child[3]=TargetNotSacrificeProtected, Child[4]=GenericTargetEvaluations)
-Behaviors=(BehaviorName=ScoreSureShotEnemy_ABA, NodeType=Sequence, Child[0]=TargetHitChanceHigh, Child[1]=TargetNotTeamTheLost, Child[2]=TargetIsEnemy, Child[3]=TargetNotBound, Child[4]=TargetNotSacrificeProtected, Child[5]=GenericTargetEvaluations)
-Behaviors=(BehaviorName=ScoreSureShotEnemy_ABA, NodeType=Sequence, Child[0]=TargetHitChanceHigh, Child[1]=TargetIsNotCivilian, Child[2]=TargetIsEnemy, Child[3]=TargetNotBoundorPanicked, Child[4]=GenericTargetEvaluations)
+Behaviors=(BehaviorName=ScoreSureShotEnemy_ABA, NodeType=Sequence, Child[0]=TargetHitChanceHigh, Child[1]=TargetIsNotCivilian, Child[2]=TargetIsEnemy, Child[3]=TargetNotBoundorPanicked, Child[4]=GenericTargetEvaluations)

; TryVanish: MOCX needs it for its Ranger. Maybe rename TryVanish_RM. Doesn't need to be done in this mod
; SelectTargetForChainShot: Use MOCX one to not consider Lost or VIP
; If it doesn't exist create it. To avoid redscreen remove and create
-Behaviors=(BehaviorName=SelectTargetForChainShot, NodeType=Sequence, Child[0]=SetTargetStack-ChainShot, Child[1]=GenericSelectBestTarget, Child[2]=HasValidTarget-ChainShot)
-Behaviors=(BehaviorName=SelectTargetForChainShot, NodeType=Sequence, Child[0]=SetTargetStack-ChainShot, Child[1]=SelectTarget_FavorableNonLostCivilianOrVIP, Child[2]=HasValidTarget-ChainShot)
+Behaviors=(BehaviorName=SelectTargetForChainShot, NodeType=Sequence, Child[0]=SetTargetStack-ChainShot, Child[1]=SelectTarget_FavorableNonLostCivilianOrVIP, Child[2]=HasValidTarget-ChainShot)

; TryJustice: Keep ABA but modify SelectJusticeTarget to not consider Lost for Justice
-Behaviors=(BehaviorName=TryJustice, NodeType=Sequence, Child[0]=IsAbilityAvailable-Justice, Child[1]=SelectJusticeTarget, Child[2]=SelectAbility-Justice)
-Behaviors=(BehaviorName=TryJustice, NodeType=Sequence, Child[0]=IsAbilityAvailable-Justice, Child[1]=SelectTargetForJustice, Child[2]=SelectAbility-Justice) 
-Behaviors=(BehaviorName=SelectJusticeTarget, NodeType=Sequence, Child[0]=SetTargetStack-Justice, Child[1]=GenericSelectBestTarget, Child[2]=HasValidTarget-Justice)
+Behaviors=(BehaviorName=TryJustice, NodeType=Sequence, Child[0]=IsAbilityAvailable-Justice, Child[1]=SelectJusticeTarget, Child[2]=SelectAbility-Justice)
+Behaviors=(BehaviorName=SelectJusticeTarget, NodeType=Sequence, Child[0]=SetTargetStack-Justice, Child[1]=SelectBestTargetForGetOverHere, Child[2]=HasValidTarget-Justice)

; ScoreFlankedEnemy_ABA: Keep ABC behavior
; If it doesn't exist create it. To avoid redscreen remove and create
-Behaviors=(BehaviorName=ScoreFlankedEnemy_ABA, NodeType=Sequence, Child[0]=IsFlankingTarget, Child[1]=TargetIsEnemy, Child[2]=TargetHitChanceNotLow, Child[3]=TargetNotBound, Child[4]=TargetNotSacrificeProtected, Child[5]=GenericTargetEvaluations)
-Behaviors=(BehaviorName=ScoreFlankedEnemy_ABA, NodeType=Sequence, Child[0]=IsFlankingTarget, Child[1]=TargetIsNotCivilian, Child[2]=TargetIsEnemy, Child[3]=TargetHitChanceNotLow, Child[4]=TargetNotBoundorPanicked, Child[5]=GenericTargetEvaluations)
+Behaviors=(BehaviorName=ScoreFlankedEnemy_ABA, NodeType=Sequence, Child[0]=IsFlankingTarget, Child[1]=TargetIsNotCivilian, Child[2]=TargetIsEnemy, Child[3]=TargetHitChanceNotLow, Child[4]=TargetNotBoundorPanicked, Child[5]=GenericTargetEvaluations)
